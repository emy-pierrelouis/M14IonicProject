{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = keyframes => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        } else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = str => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = el => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = {\n    passive: true\n  };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = ev => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = function () {\n  let keyframes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = keyframeRules => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = element => {\n  // getRootNode is not always available in SSR environments.\n  // TODO(FW-2832): types\n  const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n  return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  var _a;\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = function () {\n  let classes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let className = arguments.length > 1 ? arguments[1] : undefined;\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\nconst createAnimation = animationId => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  let paused = false;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const onStopOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' || win !== undefined && typeof win.AnimationEffect === 'function';\n  const supportsWebAnimations = typeof Element === 'function' && typeof Element.prototype.animate === 'function' && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = clearStyleSheets => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = clearStyleSheets => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n    paused = false;\n  };\n  const isRunning = () => {\n    return numAnimationsRunning !== 0 && !paused;\n  };\n  /**\n   * @internal\n   * Remove a callback from a chosen callback array\n   * @param callbackToRemove: A reference to the callback that should be removed\n   * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n   */\n  const clearCallback = (callbackToRemove, callbackObjects) => {\n    const index = callbackObjects.findIndex(callbackObject => callbackObject.c === callbackToRemove);\n    if (index > -1) {\n      callbackObjects.splice(index, 1);\n    }\n  };\n  /**\n   * @internal\n   * Add a callback to be fired when an animation is stopped/cancelled.\n   * @param callback: A reference to the callback that should be fired\n   * @param opts: Any options associated with this particular callback\n   */\n  const onStop = (callback, opts) => {\n    onStopOneTimeCallbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    } else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = readFn => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = writeFn => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = readFn => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = writeFn => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = className => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = className => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = function () {\n    let styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = function () {\n    let propertyNames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = className => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = className => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = function () {\n    let styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = function () {\n    let propertyNames = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = animationDirection => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = animationFill => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = animationDelay => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = animationEasing => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = animationDuration => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = animationIterations => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = animation => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = el => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      } else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      } else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = animationToAdd => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      } else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = keyframeValues => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = keyframeValues => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach(animation => {\n        /**\n         * animation.effect's type is AnimationEffect.\n         * However, in this case we have a more specific\n         * type of AnimationEffect called KeyframeEffect which\n         * inherits from AnimationEffect. As a result,\n         * we cast animation.effect to KeyframeEffect.\n         */\n        const keyframeEffect = animation.effect;\n        /**\n         * setKeyframes is not supported in all browser\n         * versions that Ionic supports, so we need to\n         * check for support before using it.\n         */\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (keyframeEffect.setKeyframes) {\n          keyframeEffect.setKeyframes(keyframeValues);\n        } else {\n          const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    } else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach(callback => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    /**\n     * Clean up any value coercion before\n     * the user callbacks fire otherwise\n     * they may get stale values. For example,\n     * if someone calls progressStart(0) the\n     * animation may still be reversed.\n     */\n    forceDurationValue = undefined;\n    forceDirectionValue = undefined;\n    forceDelayValue = undefined;\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = function () {\n    let toggleAnimationName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = function () {\n    let toggleAnimationName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      } else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = step => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        // When creating the animation the delay is guaranteed to be set to a number.\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    } else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = step => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = function () {\n    let toggleAnimationName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let step = arguments.length > 1 ? arguments[1] : undefined;\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = function () {\n    let deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let toggleAnimationName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let step = arguments.length > 2 ? arguments[2] : undefined;\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    } else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = function () {\n    let forceLinearEasing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let step = arguments.length > 1 ? arguments[1] : undefined;\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = step => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      } else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    } else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      } else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined && !parentAnimation) {\n      play();\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      } else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n      paused = true;\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    } else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    } else {\n      updateCSSAnimation();\n    }\n  };\n  const play = opts => {\n    return new Promise(resolve => {\n      if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, {\n          oneTimeCallback: true\n        });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      /**\n       * When one of these callbacks fires we\n       * need to clear the other's callback otherwise\n       * you can potentially get these callbacks\n       * firing multiple times if the play method\n       * is subsequently called.\n       * Example:\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * animation.stop() (onStop callback is fired, onFinish is not)\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * Total onStop callbacks: 1\n       * Total onFinish callbacks: 2\n       */\n      const onStopCallback = () => {\n        clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n        resolve();\n      };\n      const onFinishCallback = () => {\n        clearCallback(onStopCallback, onStopOneTimeCallbacks);\n        resolve();\n      };\n      /**\n       * The play method resolves when an animation\n       * run either finishes or is cancelled.\n       */\n      onFinish(onFinishCallback, {\n        oneTimeCallback: true\n      });\n      onStop(onStopCallback, {\n        oneTimeCallback: true\n      });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      } else {\n        playCSSAnimations();\n      }\n      paused = false;\n    });\n  };\n  /**\n   * Stops an animation and resets it state to the\n   * beginning. This does not fire any onFinish\n   * callbacks because the animation did not finish.\n   * However, since the animation was not destroyed\n   * (i.e. the animation could run again) we do not\n   * clear the onFinish callbacks.\n   */\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n    onStopOneTimeCallbacks.forEach(onStopCallback => onStopCallback.c(0, ani));\n    onStopOneTimeCallbacks.length = 0;\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    } else {\n      _keyframes = [{\n        offset: 0,\n        [property]: value\n      }, ..._keyframes];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    } else {\n      _keyframes = [..._keyframes, {\n        offset: 1,\n        [property]: value\n      }];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    isRunning,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\nexport { createAnimation as c };","map":{"version":3,"names":["w","win","r","raf","animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","arguments","length","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","_a","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","parentAnimation","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","willComplete","finished","shouldCalculateNumAnimations","ani","paused","onFinishCallbacks","onFinishOneTimeCallbacks","onStopOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","isRunning","clearCallback","callbackToRemove","callbackObjects","findIndex","callbackObject","c","splice","onStop","o","onFinish","callbacks","oneTimeCallback","animation","cancel","elementsArray","slice","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","different","updateKeyframes","keyframeEffect","effect","setKeyframes","newEffect","KeyframeEffect","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","onStopCallback","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"sources":["C:/Users/Emilie/Documents/SCHOOL/MOBILE 2 FRED/TP1/MontantTotal/node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n    keyframes.forEach((keyframe) => {\n        for (const key in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(key)) {\n                const value = keyframe[key];\n                if (key === 'easing') {\n                    const newKey = 'animation-timing-function';\n                    keyframe[newKey] = value;\n                    delete keyframe[key];\n                }\n                else {\n                    const newKey = convertCamelCaseToHypen(key);\n                    if (newKey !== key) {\n                        keyframe[newKey] = value;\n                        delete keyframe[key];\n                    }\n                }\n            }\n        }\n    });\n    return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n    if (animationPrefix === undefined) {\n        const supportsUnprefixed = el.style.animationName !== undefined;\n        const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n        animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n    }\n    return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n    element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n        el.addEventListener('animationend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n            el.removeEventListener('animationend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n    return keyframes\n        .map((keyframe) => {\n        const offset = keyframe.offset;\n        const frameString = [];\n        for (const property in keyframe) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n                frameString.push(`${property}: ${keyframe[property]};`);\n            }\n        }\n        return `${offset * 100}% { ${frameString.join(' ')} }`;\n    })\n        .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n    let index = keyframeIds.indexOf(keyframeRules);\n    if (index < 0) {\n        index = keyframeIds.push(keyframeRules) - 1;\n    }\n    return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n    // getRootNode is not always available in SSR environments.\n    // TODO(FW-2832): types\n    const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n    return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n    var _a;\n    const styleContainer = getStyleContainer(element);\n    const keyframePrefix = getAnimationPrefix(element);\n    const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n    if (existingStylesheet) {\n        return existingStylesheet;\n    }\n    const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n    stylesheet.id = keyframeName;\n    stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n    styleContainer.appendChild(stylesheet);\n    return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n    if (className !== undefined) {\n        const classNameToAppend = Array.isArray(className) ? className : [className];\n        return [...classes, ...classNameToAppend];\n    }\n    return classes;\n};\n\nconst createAnimation = (animationId) => {\n    let _delay;\n    let _duration;\n    let _easing;\n    let _iterations;\n    let _fill;\n    let _direction;\n    let _keyframes = [];\n    let beforeAddClasses = [];\n    let beforeRemoveClasses = [];\n    let initialized = false;\n    let parentAnimation;\n    let beforeStylesValue = {};\n    let afterAddClasses = [];\n    let afterRemoveClasses = [];\n    let afterStylesValue = {};\n    let numAnimationsRunning = 0;\n    let shouldForceLinearEasing = false;\n    let shouldForceSyncPlayback = false;\n    let cssAnimationsTimerFallback;\n    let forceDirectionValue;\n    let forceDurationValue;\n    let forceDelayValue;\n    let willComplete = true;\n    let finished = false;\n    let shouldCalculateNumAnimations = true;\n    let keyframeName;\n    let ani;\n    let paused = false;\n    const id = animationId;\n    const onFinishCallbacks = [];\n    const onFinishOneTimeCallbacks = [];\n    const onStopOneTimeCallbacks = [];\n    const elements = [];\n    const childAnimations = [];\n    const stylesheets = [];\n    const _beforeAddReadFunctions = [];\n    const _beforeAddWriteFunctions = [];\n    const _afterAddReadFunctions = [];\n    const _afterAddWriteFunctions = [];\n    const webAnimations = [];\n    const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n        (win !== undefined && typeof win.AnimationEffect === 'function');\n    const supportsWebAnimations = typeof Element === 'function' &&\n        typeof Element.prototype.animate === 'function' &&\n        supportsAnimationEffect;\n    const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n    const getWebAnimations = () => {\n        return webAnimations;\n    };\n    const destroy = (clearStyleSheets) => {\n        childAnimations.forEach((childAnimation) => {\n            childAnimation.destroy(clearStyleSheets);\n        });\n        cleanUp(clearStyleSheets);\n        elements.length = 0;\n        childAnimations.length = 0;\n        _keyframes.length = 0;\n        clearOnFinish();\n        initialized = false;\n        shouldCalculateNumAnimations = true;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations, removes\n     * any animation properties from the\n     * animation's elements, and removes the\n     * animation's stylesheets from the DOM.\n     */\n    const cleanUp = (clearStyleSheets) => {\n        cleanUpElements();\n        if (clearStyleSheets) {\n            cleanUpStyleSheets();\n        }\n    };\n    const resetFlags = () => {\n        shouldForceLinearEasing = false;\n        shouldForceSyncPlayback = false;\n        shouldCalculateNumAnimations = true;\n        forceDirectionValue = undefined;\n        forceDurationValue = undefined;\n        forceDelayValue = undefined;\n        numAnimationsRunning = 0;\n        finished = false;\n        willComplete = true;\n        paused = false;\n    };\n    const isRunning = () => {\n        return numAnimationsRunning !== 0 && !paused;\n    };\n    /**\n     * @internal\n     * Remove a callback from a chosen callback array\n     * @param callbackToRemove: A reference to the callback that should be removed\n     * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n     */\n    const clearCallback = (callbackToRemove, callbackObjects) => {\n        const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\n        if (index > -1) {\n            callbackObjects.splice(index, 1);\n        }\n    };\n    /**\n     * @internal\n     * Add a callback to be fired when an animation is stopped/cancelled.\n     * @param callback: A reference to the callback that should be fired\n     * @param opts: Any options associated with this particular callback\n     */\n    const onStop = (callback, opts) => {\n        onStopOneTimeCallbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const onFinish = (callback, opts) => {\n        const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n        callbacks.push({ c: callback, o: opts });\n        return ani;\n    };\n    const clearOnFinish = () => {\n        onFinishCallbacks.length = 0;\n        onFinishOneTimeCallbacks.length = 0;\n        return ani;\n    };\n    /**\n     * Cancels any Web Animations and removes\n     * any animation properties from the\n     * the animation's elements.\n     */\n    const cleanUpElements = () => {\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                animation.cancel();\n            });\n            webAnimations.length = 0;\n        }\n        else {\n            const elementsArray = elements.slice();\n            raf(() => {\n                elementsArray.forEach((element) => {\n                    removeStyleProperty(element, 'animation-name');\n                    removeStyleProperty(element, 'animation-duration');\n                    removeStyleProperty(element, 'animation-timing-function');\n                    removeStyleProperty(element, 'animation-iteration-count');\n                    removeStyleProperty(element, 'animation-delay');\n                    removeStyleProperty(element, 'animation-play-state');\n                    removeStyleProperty(element, 'animation-fill-mode');\n                    removeStyleProperty(element, 'animation-direction');\n                });\n            });\n        }\n    };\n    /**\n     * Removes the animation's stylesheets\n     * from the DOM.\n     */\n    const cleanUpStyleSheets = () => {\n        stylesheets.forEach((stylesheet) => {\n            /**\n             * When sharing stylesheets, it's possible\n             * for another animation to have already\n             * cleaned up a particular stylesheet\n             */\n            if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n                stylesheet.parentNode.removeChild(stylesheet);\n            }\n        });\n        stylesheets.length = 0;\n    };\n    const beforeAddRead = (readFn) => {\n        _beforeAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const beforeAddWrite = (writeFn) => {\n        _beforeAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const afterAddRead = (readFn) => {\n        _afterAddReadFunctions.push(readFn);\n        return ani;\n    };\n    const afterAddWrite = (writeFn) => {\n        _afterAddWriteFunctions.push(writeFn);\n        return ani;\n    };\n    const beforeAddClass = (className) => {\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\n        return ani;\n    };\n    const beforeRemoveClass = (className) => {\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n        return ani;\n    };\n    /**\n     * Set CSS inline styles to the animation's\n     * elements before the animation begins.\n     */\n    const beforeStyles = (styles = {}) => {\n        beforeStylesValue = styles;\n        return ani;\n    };\n    /**\n     * Clear CSS inline styles from the animation's\n     * elements before the animation begins.\n     */\n    const beforeClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            beforeStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const afterAddClass = (className) => {\n        afterAddClasses = addClassToArray(afterAddClasses, className);\n        return ani;\n    };\n    const afterRemoveClass = (className) => {\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n        return ani;\n    };\n    const afterStyles = (styles = {}) => {\n        afterStylesValue = styles;\n        return ani;\n    };\n    const afterClearStyles = (propertyNames = []) => {\n        for (const property of propertyNames) {\n            afterStylesValue[property] = '';\n        }\n        return ani;\n    };\n    const getFill = () => {\n        if (_fill !== undefined) {\n            return _fill;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getFill();\n        }\n        return 'both';\n    };\n    const getDirection = () => {\n        if (forceDirectionValue !== undefined) {\n            return forceDirectionValue;\n        }\n        if (_direction !== undefined) {\n            return _direction;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDirection();\n        }\n        return 'normal';\n    };\n    const getEasing = () => {\n        if (shouldForceLinearEasing) {\n            return 'linear';\n        }\n        if (_easing !== undefined) {\n            return _easing;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getEasing();\n        }\n        return 'linear';\n    };\n    const getDuration = () => {\n        if (shouldForceSyncPlayback) {\n            return 0;\n        }\n        if (forceDurationValue !== undefined) {\n            return forceDurationValue;\n        }\n        if (_duration !== undefined) {\n            return _duration;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDuration();\n        }\n        return 0;\n    };\n    const getIterations = () => {\n        if (_iterations !== undefined) {\n            return _iterations;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getIterations();\n        }\n        return 1;\n    };\n    const getDelay = () => {\n        if (forceDelayValue !== undefined) {\n            return forceDelayValue;\n        }\n        if (_delay !== undefined) {\n            return _delay;\n        }\n        if (parentAnimation) {\n            return parentAnimation.getDelay();\n        }\n        return 0;\n    };\n    const getKeyframes = () => {\n        return _keyframes;\n    };\n    const direction = (animationDirection) => {\n        _direction = animationDirection;\n        update(true);\n        return ani;\n    };\n    const fill = (animationFill) => {\n        _fill = animationFill;\n        update(true);\n        return ani;\n    };\n    const delay = (animationDelay) => {\n        _delay = animationDelay;\n        update(true);\n        return ani;\n    };\n    const easing = (animationEasing) => {\n        _easing = animationEasing;\n        update(true);\n        return ani;\n    };\n    const duration = (animationDuration) => {\n        /**\n         * CSS Animation Durations of 0ms work fine on Chrome\n         * but do not run on Safari, so force it to 1ms to\n         * get it to run on both platforms.\n         */\n        if (!supportsWebAnimations && animationDuration === 0) {\n            animationDuration = 1;\n        }\n        _duration = animationDuration;\n        update(true);\n        return ani;\n    };\n    const iterations = (animationIterations) => {\n        _iterations = animationIterations;\n        update(true);\n        return ani;\n    };\n    const parent = (animation) => {\n        parentAnimation = animation;\n        return ani;\n    };\n    const addElement = (el) => {\n        if (el != null) {\n            if (el.nodeType === 1) {\n                elements.push(el);\n            }\n            else if (el.length >= 0) {\n                for (let i = 0; i < el.length; i++) {\n                    elements.push(el[i]);\n                }\n            }\n            else {\n                console.error('Invalid addElement value');\n            }\n        }\n        return ani;\n    };\n    const addAnimation = (animationToAdd) => {\n        if (animationToAdd != null) {\n            if (Array.isArray(animationToAdd)) {\n                for (const animation of animationToAdd) {\n                    animation.parent(ani);\n                    childAnimations.push(animation);\n                }\n            }\n            else {\n                animationToAdd.parent(ani);\n                childAnimations.push(animationToAdd);\n            }\n        }\n        return ani;\n    };\n    const keyframes = (keyframeValues) => {\n        const different = _keyframes !== keyframeValues;\n        _keyframes = keyframeValues;\n        if (different) {\n            updateKeyframes(_keyframes);\n        }\n        return ani;\n    };\n    const updateKeyframes = (keyframeValues) => {\n        if (supportsWebAnimations) {\n            getWebAnimations().forEach((animation) => {\n                /**\n                 * animation.effect's type is AnimationEffect.\n                 * However, in this case we have a more specific\n                 * type of AnimationEffect called KeyframeEffect which\n                 * inherits from AnimationEffect. As a result,\n                 * we cast animation.effect to KeyframeEffect.\n                 */\n                const keyframeEffect = animation.effect;\n                /**\n                 * setKeyframes is not supported in all browser\n                 * versions that Ionic supports, so we need to\n                 * check for support before using it.\n                 */\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                if (keyframeEffect.setKeyframes) {\n                    keyframeEffect.setKeyframes(keyframeValues);\n                }\n                else {\n                    const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n                    animation.effect = newEffect;\n                }\n            });\n        }\n        else {\n            initializeCSSAnimation();\n        }\n    };\n    /**\n     * Run all \"before\" animation hooks.\n     */\n    const beforeAnimation = () => {\n        // Runs all before read callbacks\n        _beforeAddReadFunctions.forEach((callback) => callback());\n        // Runs all before write callbacks\n        _beforeAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation runs\n        const addClasses = beforeAddClasses;\n        const removeClasses = beforeRemoveClasses;\n        const styles = beforeStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n    };\n    /**\n     * Run all \"after\" animation hooks.\n     */\n    const afterAnimation = () => {\n        clearCSSAnimationsTimeout();\n        // Runs all after read callbacks\n        _afterAddReadFunctions.forEach((callback) => callback());\n        // Runs all after write callbacks\n        _afterAddWriteFunctions.forEach((callback) => callback());\n        // Updates styles and classes before animation ends\n        const currentStep = willComplete ? 1 : 0;\n        const addClasses = afterAddClasses;\n        const removeClasses = afterRemoveClasses;\n        const styles = afterStylesValue;\n        elements.forEach((el) => {\n            const elementClassList = el.classList;\n            addClasses.forEach((c) => elementClassList.add(c));\n            removeClasses.forEach((c) => elementClassList.remove(c));\n            for (const property in styles) {\n                // eslint-disable-next-line no-prototype-builtins\n                if (styles.hasOwnProperty(property)) {\n                    setStyleProperty(el, property, styles[property]);\n                }\n            }\n        });\n        /**\n         * Clean up any value coercion before\n         * the user callbacks fire otherwise\n         * they may get stale values. For example,\n         * if someone calls progressStart(0) the\n         * animation may still be reversed.\n         */\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n        onFinishCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n            return onFinishCallback.c(currentStep, ani);\n        });\n        onFinishOneTimeCallbacks.length = 0;\n        shouldCalculateNumAnimations = true;\n        if (willComplete) {\n            finished = true;\n        }\n        willComplete = true;\n    };\n    const animationFinish = () => {\n        if (numAnimationsRunning === 0) {\n            return;\n        }\n        numAnimationsRunning--;\n        if (numAnimationsRunning === 0) {\n            afterAnimation();\n            if (parentAnimation) {\n                parentAnimation.animationFinish();\n            }\n        }\n    };\n    const initializeCSSAnimation = (toggleAnimationName = true) => {\n        cleanUpStyleSheets();\n        const processedKeyframes = processKeyframes(_keyframes);\n        elements.forEach((element) => {\n            if (processedKeyframes.length > 0) {\n                const keyframeRules = generateKeyframeRules(processedKeyframes);\n                keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n                const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n                stylesheets.push(stylesheet);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill());\n                setStyleProperty(element, 'animation-direction', getDirection());\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                setStyleProperty(element, 'animation-play-state', 'paused');\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', stylesheet.id || null);\n                });\n            }\n        });\n    };\n    const initializeWebAnimation = () => {\n        elements.forEach((element) => {\n            const animation = element.animate(_keyframes, {\n                id,\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n            animation.pause();\n            webAnimations.push(animation);\n        });\n        if (webAnimations.length > 0) {\n            webAnimations[0].onfinish = () => {\n                animationFinish();\n            };\n        }\n    };\n    const initializeAnimation = (toggleAnimationName = true) => {\n        beforeAnimation();\n        if (_keyframes.length > 0) {\n            if (supportsWebAnimations) {\n                initializeWebAnimation();\n            }\n            else {\n                initializeCSSAnimation(toggleAnimationName);\n            }\n        }\n        initialized = true;\n    };\n    const setAnimationStep = (step) => {\n        step = Math.min(Math.max(step, 0), 0.9999);\n        if (supportsWebAnimations) {\n            webAnimations.forEach((animation) => {\n                // When creating the animation the delay is guaranteed to be set to a number.\n                animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n                animation.pause();\n            });\n        }\n        else {\n            const animationDuration = `-${getDuration() * step}ms`;\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-delay', animationDuration);\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                }\n            });\n        }\n    };\n    const updateWebAnimation = (step) => {\n        webAnimations.forEach((animation) => {\n            animation.effect.updateTiming({\n                delay: getDelay(),\n                duration: getDuration(),\n                easing: getEasing(),\n                iterations: getIterations(),\n                fill: getFill(),\n                direction: getDirection(),\n            });\n        });\n        if (step !== undefined) {\n            setAnimationStep(step);\n        }\n    };\n    const updateCSSAnimation = (toggleAnimationName = true, step) => {\n        raf(() => {\n            elements.forEach((element) => {\n                setStyleProperty(element, 'animation-name', keyframeName || null);\n                setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n                setStyleProperty(element, 'animation-timing-function', getEasing());\n                setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n                setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n                setStyleProperty(element, 'animation-direction', getDirection() || null);\n                const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n                setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n                if (toggleAnimationName) {\n                    setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n                }\n                raf(() => {\n                    setStyleProperty(element, 'animation-name', keyframeName || null);\n                });\n            });\n        });\n    };\n    const update = (deep = false, toggleAnimationName = true, step) => {\n        if (deep) {\n            childAnimations.forEach((animation) => {\n                animation.update(deep, toggleAnimationName, step);\n            });\n        }\n        if (supportsWebAnimations) {\n            updateWebAnimation(step);\n        }\n        else {\n            updateCSSAnimation(toggleAnimationName, step);\n        }\n        return ani;\n    };\n    const progressStart = (forceLinearEasing = false, step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStart(forceLinearEasing, step);\n        });\n        pauseAnimation();\n        shouldForceLinearEasing = forceLinearEasing;\n        if (!initialized) {\n            initializeAnimation();\n        }\n        update(false, true, step);\n        return ani;\n    };\n    const progressStep = (step) => {\n        childAnimations.forEach((animation) => {\n            animation.progressStep(step);\n        });\n        setAnimationStep(step);\n        return ani;\n    };\n    const progressEnd = (playTo, step, dur) => {\n        shouldForceLinearEasing = false;\n        childAnimations.forEach((animation) => {\n            animation.progressEnd(playTo, step, dur);\n        });\n        if (dur !== undefined) {\n            forceDurationValue = dur;\n        }\n        finished = false;\n        willComplete = true;\n        if (playTo === 0) {\n            forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n            if (forceDirectionValue === 'reverse') {\n                willComplete = false;\n            }\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(1 - step);\n            }\n            else {\n                forceDelayValue = (1 - step) * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        else if (playTo === 1) {\n            if (supportsWebAnimations) {\n                update();\n                setAnimationStep(step);\n            }\n            else {\n                forceDelayValue = step * getDuration() * -1;\n                update(false, false);\n            }\n        }\n        if (playTo !== undefined && !parentAnimation) {\n            play();\n        }\n        return ani;\n    };\n    const pauseAnimation = () => {\n        if (initialized) {\n            if (supportsWebAnimations) {\n                webAnimations.forEach((animation) => {\n                    animation.pause();\n                });\n            }\n            else {\n                elements.forEach((element) => {\n                    setStyleProperty(element, 'animation-play-state', 'paused');\n                });\n            }\n            paused = true;\n        }\n    };\n    const pause = () => {\n        childAnimations.forEach((animation) => {\n            animation.pause();\n        });\n        pauseAnimation();\n        return ani;\n    };\n    const onAnimationEndFallback = () => {\n        cssAnimationsTimerFallback = undefined;\n        animationFinish();\n    };\n    const clearCSSAnimationsTimeout = () => {\n        if (cssAnimationsTimerFallback) {\n            clearTimeout(cssAnimationsTimerFallback);\n        }\n    };\n    const playCSSAnimations = () => {\n        clearCSSAnimationsTimeout();\n        raf(() => {\n            elements.forEach((element) => {\n                if (_keyframes.length > 0) {\n                    setStyleProperty(element, 'animation-play-state', 'running');\n                }\n            });\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n        else {\n            /**\n             * This is a catchall in the event that a CSS Animation did not finish.\n             * The Web Animations API has mechanisms in place for preventing this.\n             * CSS Animations will not fire an `animationend` event\n             * for elements with `display: none`. The Web Animations API\n             * accounts for this, but using raw CSS Animations requires\n             * this workaround.\n             */\n            const animationDelay = getDelay() || 0;\n            const animationDuration = getDuration() || 0;\n            const animationIterations = getIterations() || 1;\n            // No need to set a timeout when animation has infinite iterations\n            if (isFinite(animationIterations)) {\n                cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n            }\n            animationEnd(elements[0], () => {\n                clearCSSAnimationsTimeout();\n                /**\n                 * Ensure that clean up\n                 * is always done a frame\n                 * before the onFinish handlers\n                 * are fired. Otherwise, there\n                 * may be flickering if a new\n                 * animation is started on the same\n                 * element too quickly\n                 */\n                raf(() => {\n                    clearCSSAnimationPlayState();\n                    raf(animationFinish);\n                });\n            });\n        }\n    };\n    const clearCSSAnimationPlayState = () => {\n        elements.forEach((element) => {\n            removeStyleProperty(element, 'animation-duration');\n            removeStyleProperty(element, 'animation-delay');\n            removeStyleProperty(element, 'animation-play-state');\n        });\n    };\n    const playWebAnimations = () => {\n        webAnimations.forEach((animation) => {\n            animation.play();\n        });\n        if (_keyframes.length === 0 || elements.length === 0) {\n            animationFinish();\n        }\n    };\n    const resetAnimation = () => {\n        if (supportsWebAnimations) {\n            setAnimationStep(0);\n            updateWebAnimation();\n        }\n        else {\n            updateCSSAnimation();\n        }\n    };\n    const play = (opts) => {\n        return new Promise((resolve) => {\n            if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n                shouldForceSyncPlayback = true;\n                onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n            }\n            if (!initialized) {\n                initializeAnimation();\n            }\n            if (finished) {\n                resetAnimation();\n                finished = false;\n            }\n            if (shouldCalculateNumAnimations) {\n                numAnimationsRunning = childAnimations.length + 1;\n                shouldCalculateNumAnimations = false;\n            }\n            /**\n             * When one of these callbacks fires we\n             * need to clear the other's callback otherwise\n             * you can potentially get these callbacks\n             * firing multiple times if the play method\n             * is subsequently called.\n             * Example:\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * animation.stop() (onStop callback is fired, onFinish is not)\n             * animation.play() (onStop and onFinish callbacks are registered)\n             * Total onStop callbacks: 1\n             * Total onFinish callbacks: 2\n             */\n            const onStopCallback = () => {\n                clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n                resolve();\n            };\n            const onFinishCallback = () => {\n                clearCallback(onStopCallback, onStopOneTimeCallbacks);\n                resolve();\n            };\n            /**\n             * The play method resolves when an animation\n             * run either finishes or is cancelled.\n             */\n            onFinish(onFinishCallback, { oneTimeCallback: true });\n            onStop(onStopCallback, { oneTimeCallback: true });\n            childAnimations.forEach((animation) => {\n                animation.play();\n            });\n            if (supportsWebAnimations) {\n                playWebAnimations();\n            }\n            else {\n                playCSSAnimations();\n            }\n            paused = false;\n        });\n    };\n    /**\n     * Stops an animation and resets it state to the\n     * beginning. This does not fire any onFinish\n     * callbacks because the animation did not finish.\n     * However, since the animation was not destroyed\n     * (i.e. the animation could run again) we do not\n     * clear the onFinish callbacks.\n     */\n    const stop = () => {\n        childAnimations.forEach((animation) => {\n            animation.stop();\n        });\n        if (initialized) {\n            cleanUpElements();\n            initialized = false;\n        }\n        resetFlags();\n        onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\n        onStopOneTimeCallbacks.length = 0;\n    };\n    const from = (property, value) => {\n        const firstFrame = _keyframes[0];\n        if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n            firstFrame[property] = value;\n        }\n        else {\n            _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n        }\n        return ani;\n    };\n    const to = (property, value) => {\n        const lastFrame = _keyframes[_keyframes.length - 1];\n        if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n            lastFrame[property] = value;\n        }\n        else {\n            _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n        }\n        return ani;\n    };\n    const fromTo = (property, fromValue, toValue) => {\n        return from(property, fromValue).to(property, toValue);\n    };\n    return (ani = {\n        parentAnimation,\n        elements,\n        childAnimations,\n        id,\n        animationFinish,\n        from,\n        to,\n        fromTo,\n        parent,\n        play,\n        pause,\n        stop,\n        destroy,\n        keyframes,\n        addAnimation,\n        addElement,\n        update,\n        fill,\n        direction,\n        iterations,\n        duration,\n        easing,\n        delay,\n        getWebAnimations,\n        getKeyframes,\n        getFill,\n        getDirection,\n        getDelay,\n        getIterations,\n        getEasing,\n        getDuration,\n        afterAddRead,\n        afterAddWrite,\n        afterClearStyles,\n        afterStyles,\n        afterRemoveClass,\n        afterAddClass,\n        beforeAddRead,\n        beforeAddWrite,\n        beforeClearStyles,\n        beforeStyles,\n        beforeRemoveClass,\n        beforeAddClass,\n        onFinish,\n        isRunning,\n        progressStart,\n        progressStep,\n        progressEnd,\n    });\n};\n\nexport { createAnimation as c };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}